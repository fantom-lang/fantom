//
// Syntax color coding options
//
// History:
//   09 Aug 08  Brian Frank  Creation
//

using gfx
using fwt
using fluxText

SyntaxOptions
{

//////////////////////////////////////////////////////////////////////////
// Ext to Rule Mapping
//////////////////////////////////////////////////////////////////////////

  ** map ext:rule where rule is defined in "syntax/syntax-{rule}.fog"
  ** Extensions are matched to rules as follows:
  **   1. if match found for 'file.ext', then it takes precedence
  **   2. if the first line has shebang, then we attempt to
  **      match as "#!/bin/ext" or "#!/bin/env ext"
  **   3. use default rules
  extToRules =
  [
    // batch rules
    "bat": "batch",

    // as rules
    "as": "as",

    // cpp rules
    "h":   "cpp",
    "c":   "cpp",
    "cpp": "cpp",

    // csharp rules
    "cs": "csharp",

    // css rules
    "css": "css",

    // fan rules
    "fan": "fan",
    "fog": "fan",
    "fansubstitute": "fan",
    "fwt": "fan",
    "props": "fan",

    // java rules
    "java": "java",

    // javascript rules
    "js": "javascript",

    // perl rules
    "pl": "perl",

    // python rules
    "py": "python",

    // ruby rules
    "rb": "ruby",

    // sedona rules
    "sedona": "sedona",

    // shell rules
    "sh":   "shell",
    "bash": "shell",
    "ksh":  "shell",
    "zsh":  "shell",

    // xml rules
    "xml": "xml",
    "htm": "xml",
    "html": "xml",
  ]

//////////////////////////////////////////////////////////////////////////
// Styling
//////////////////////////////////////////////////////////////////////////

  ** default font to use absense font in specific syntax styling;
  ** if not configured then we use Font.sysMonospace which defaults
  ** to Monaco on OS X and Courier New on other platforms
  //font = Font("10pt Courier New")

  ** color coding
  highlightCurLine = Color("#f0f0f0")
  text          = RichTextStyle { fg = Color("#000") }
  bracket       = RichTextStyle { fg = Color("#f00") }
  bracketMatch  = RichTextStyle { fg = Color("#f00"); bg=Color("#ff0") }
  keyword       = RichTextStyle { fg = Color("#00f") }
  literal       = RichTextStyle { fg = Color("#077") }
  comment       = RichTextStyle { fg = Color("#070") }

}