<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>fan</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\b[fan|fansubstitute]\b</string>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~F</string>
	<key>name</key>
	<string>Fan</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\b(this)\b</string>
			<key>name</key>
			<string>support.class.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(assert)\b</string>
			<key>name</key>
			<string>support.function.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(const|using|override|virtual|protected|abstract|internal|public|private|protected|new|static|final|super|is|isnot|for|foreach|in|break|continue|while|do|return|if|else|case|switch|try|catch|finally|throw|native|mixin|default|once|readonly|volatile)\b</string>
			<key>name</key>
			<string>keyword.control.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\b(Bool|Num|Str(Buf)?|Void|Int|Float|List|Map|This|Obj|Func|Date|Type|Method|Pod|Field|Slot|Uri(Scheme|Space)?|File|Duration|Actor(Pool)?|Enum|Decimal|Depend|Err|Future|Locale|Log(Level|Record)?|MimeType|Month|(In|Out)Stream|Param|Process|Range|Regex|RegexMatcher|Service|TimeZone|Test|Unit|Unsafe|Uuid|Version|Weekday|Zip)\b\??)</string>
			<key>name</key>
			<string>storage.type.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
			<key>name</key>
			<string>constant.language.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b</string>
			<key>name</key>
			<string>constant.numeric.fan</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fan</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fan</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.fan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.fan</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\$[a-zA-Z_\{][a-zA-Z_0-9\}\.\(\)]*</string>
					<key>name</key>
					<string>source.fan.embedded.source.empty</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fan</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fan</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.fan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.fan</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fan</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fan</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.back-tick.fan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.fan</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fan</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.fan</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fan</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.fan</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fan</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\*\*).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-star.fan</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fan</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!\$)(#)(?!\{).*$\n?</string>
			<key>name</key>
			<string>comment.line.pound-sign.fan</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[-&gt;&lt;!%&amp;*+=/:]</string>
			<key>name</key>
			<string>keyword.operator.symbolic.fan</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.fan</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.fan</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.extends.fan</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.fan</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\s+([a-zA-Z_](?:\w|\.)*)(?:\s+(\:)\s+([a-zA-Z_](?:\w|\.)*))?</string>
			<key>name</key>
			<string>meta.class.fan</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x)
				(?: ^                                        # begin-of-line
				| (?: (?= \s ) (?&lt;!else) (?&lt;=\w)\s+          #  or word + space before name
				| (?= \s*[A-Za-z_] ) (?&lt;!&amp;&amp;) (?&lt;=[*&amp;&gt;\[\]])\s*   #  or type modifier before name
				)
				)
				((?: [A-Za-z_][A-Za-z0-9_]*+ | :: )*+)       # actual name
				\s*?(\() (?=                                 # match "("
				(?&lt;fun&gt; [^()]++ | \( \g&lt;fun&gt;*+ \) )*+        # function arguments
				\)                                           # match ")"
				\s*(\{|\n|//|/\*))                           # start bracket or end-of-line
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fan</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fan</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>adapted from meta.function.c in the c lang module</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fan</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.method.fan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.fan</string>
	<key>uuid</key>
	<string>4EC5A41E-2632-4D6D-A0A1-8CD0B0E0EECB</string>
</dict>
</plist>
