**************************************************************************
** title:      Controls
** author:     Andy Frank
** created:    11 Jan 2017
** copyright:  Copyright (c) 2017, Brian Frank and Andy Frank
** license:    Licensed under the Academic Free License version 3.0
**************************************************************************

Overview [#overview]
********************
TODO

Label [#label]
**************
[Label]`domkit::Label` simply displays text content. Labels are designed to
naturally align vertically with control widgets like [Button]`domkit::Button`:

  Label { it.text="My Label" }

Button [#button]
****************
[Button]`domkit::Button` is a widget that invokes an action when pressed.

  Button
  {
    it.text = "Press me"
    it.onAction { echo("Pressed!") }
  }

  Button
  {
    onAction { echo("Pressed!") }
    Elem("b") { it.text="Really Press me!" },
  }

ToggleButton [#toggleButton]
****************************
[ToggleButton]`domkit::ToggleButton` models a boolean state toggled by pressing a button:

  ToggleButton
  {
    it.text = "Toggle Me"
    it.onAction |b| { echo("state: $b.selected") }
  }

The content may be modified based on selected state by specifying
[elemOn]`domkit::ToggleButton.elemOn` and
[elemOff]`domkit::ToggleButton.elemOff`:

  ToggleButton
  {
    it.elemOn  = Elem { it.text="On" }
    it.elemOff = Elem { it.text="Off" }
    it.selected = false   // make sure to set default state last
  }

You may also pass any object to 'elemOn' and 'elemOff' and the Elem
instance will be created using 'Obj.toStr':

  ToggleButton
  {
    it.elemOn  = "On"
    it.elemOff = "Off"
  }

RadioButton [#radio]
********************
TODO

ButtonGroup [#buttonGroup]
**************************
TODO

ListButton [#listButton]
************************
[ListButton]`domkit::ListButton` allows user selection of a list item by
showing a listbox popup when a button is pressed:

  ListButton
  {
    it.items = ["Alpha", "Beta", "Gamma"]
    it.onSelect |b| { echo("Selected $b.sel.item") }
  }

By default [ListButton]`domkit::ListButton` will display items using 'toStr'.
To customize how the display element is is created, use
[onElem]`domkit::ListButton.onElem`:

  ListButton
  {
    it.items = [1,2,3,4]
    it.onElem |v| { "Item #$v" }
  }

Combo [#combo]
**************
[Combo]`domkit::Combo` combines a TextField and ListButton into a single widget
that allows a user to select from a list or manually enter a value. The
internal [TextField]`domkit::TextField` component is available with
[Combo]`domkit::Combo`. In practice you will interact with Combo the same as
[TextField]`domkit::TextField`, so [Combo.field]`domkit::Combo.field` is the
right place to register event callbacks such as 'onModify' and 'onAction'.

  Combo
  {
    it.items = ["Alpha, "Beta", "Gamma"]
    it.field.onAction |f| { echo("value: $f.val") }
  }

Checkbox [#checkbox]
********************
[Checkbox]`domkit::Checkbox` displays a checkbox that can be toggled on and off.

  Checkbox {}
  Checkbox { it.checked = true }

On its own, only the actual checkbox is displayed.  Generally its desirable
to display a text label attached to the checkbox.  You can extend the click
target area to this label using the [wrap]`domkit::Checkbox.wrap` method:

  Checkbox {}.wrap("You can click here too!")

To receive callbacks when the state changes, add an
[onAction]`domkit::Checkbox.onAction` event handler:

  Checkbox
  {
    it.onAction |c| { echo("checked: $c.checked") }
  }

Menu [#menu]
************
TODO

ProgressBar [#progressBar]
**************************
TODO

TextField [#textField]
**********************
TODO

TextArea [#textArea]
********************
TODO

Groups [#groups]
****************
Some widgets can be combined to create a seamless group by using a a
[FloxBox]`domkit::FlowBox` with a '-1px' gap spacing:

  FlowBox
  {
    it.gaps = ["-1px"]
    Button { ... }
    Button { ... }
    Button { ... }
  }

These are the supported widgets for group spacing:

 - [Button]`domkit::Button`, [ListButton]`domkit::ListButton`, [ToggleButton]`domkit::ToggleButton`
 - [TextField]`domkit::TextField`

TODO: doc domkit-group CSS classs

Table [#table]
**************
TODO

Tree [#tree]
************
TODO
